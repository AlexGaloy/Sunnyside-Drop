extends CharacterBody2D

var eggs = 12
const SPEED = 300.0
const JUMP_VELOCITY = -700.0

func _process(delta: float) -> void:
	if abs(position.x) > 4000:
		$AnimatedSprite2D.animation = "default"
		set_physics_process(false)
		$Camera2D.zoom += Vector2(.001,.001)
		for kid in $"..".find_children("music*"):
				kid.volume_db += .01
				kid.pitch_scale -= .000001
		if $Camera2D.zoom.x > 5:
			$Camera2D.zoom = Vector2(1,1)
			for kid in $"..".find_children("music*"):
				kid.volume_db = 0
			position = $"../dozen eggs".position
			set_physics_process(true)

func _physics_process(delta: float) -> void:

	if not is_on_floor():
		velocity += get_gravity()*2 * delta
		if velocity.y > 0:
			if velocity.y < 1000 and velocity.y > 500:
				$AnimatedSprite2D.rotation_degrees = (velocity.y*.36) - 180
				if $AnimatedSprite2D.rotation_degrees > 0 and $AnimatedSprite2D.rotation_degrees < 90:
					$AnimatedSprite2D.animation = "falling"
				elif $AnimatedSprite2D.rotation_degrees > 90 and $AnimatedSprite2D.rotation_degrees < 180:
					$AnimatedSprite2D.animation = "tilting"
				else:
					$AnimatedSprite2D.animation = "diving"
			elif velocity.y < 500:
				$AnimatedSprite2D.rotation_degrees = 0
			else:
				$AnimatedSprite2D.rotation_degrees = 180
		else:
			$AnimatedSprite2D.animation = "falling"
		if $AnimatedSprite2D.flip_h == true:
			$AnimatedSprite2D.rotation_degrees *= -1
	else:
		
		$AnimatedSprite2D.rotation_degrees = 0
		if velocity.x != 0:
			$AnimatedSprite2D.animation = "run"
			$AnimatedSprite2D.play("run")
		else:
			$AnimatedSprite2D.animation = "default"
	# Handle jump.
	if Input.is_action_just_pressed("jump") and is_on_floor():
		velocity.y = JUMP_VELOCITY
		$jump.play()
	if abs(position.x) > 3500:
		if $"../music3".pitch_scale != 0.4:
			for kid in $"..".find_children("music*"):
				kid.pitch_scale = 0.4
	elif abs(position.x) < 3500:
		for kid in $"..".find_children("music*"):
			kid.pitch_scale = .8+(.1*(12-eggs))
		

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis("left", "right")
	if direction:
		velocity.x = direction * SPEED
		if direction == -1:
			$AnimatedSprite2D.flip_h = true
		elif direction == 1:
			$AnimatedSprite2D.flip_h = false
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
	if eggs == 0:
		$"../dozen eggs/Label".text = "You win!"
	else:
		$"../dozen eggs/Label".text = str(eggs) + " eggs remaining"
	if Input.is_action_just_pressed("restart"):
		position = $"../dozen eggs".position

	move_and_slide()
	


func _on_music_finished() -> void:
	for kid in $"..".find_children("music*"):
		kid.play()
